{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/diksha/web_dev_projects/react_projects/quizbee/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"./components/QuestionBox\";\n\nclass QuizBee extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0\n    };\n\n    this.computeAnswer = (answer, questionId) => {\n      this.setState({\n        score: 0,\n        questionBank: this.state.questionBank.map(question => {\n          if (question.questionId === questionId) {\n            return { ...question,\n              userAnswer: answer\n            };\n          }\n\n          return { ...question\n          };\n        })\n      }); // console.log(\"Submitted\", this.state.questionBank)\n    };\n\n    this.getQuestions = () => {\n      quizService().then(response => {\n        this.setState({\n          questionBank: response.map(x => {\n            return { ...x,\n              userAnswer: \"\"\n            };\n          })\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  onSubmitHandle(id) {\n    const val = this.questionBank.filter(question => question.correct === question.userAnswer).length;\n    this.setState({\n      questionBank: this.state.questionBank,\n      score: val\n    });\n    console.log(this.state.score); // console.log(\"Submitted\", this.state.questionBank)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \" QuizBee \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.questionBank.length > 0 && this.state.questionBank.map(({\n        question,\n        answers,\n        correct,\n        questionId,\n        userAnswer\n      }) => /*#__PURE__*/_jsxDEV(QuestionBox, {\n        question: question,\n        options: answers,\n        selected: answer => this.computeAnswer(answer, questionId)\n      }, questionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submitBtn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onSubmitHandle,\n          children: \" Submit Quiz \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(QuizBee, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/diksha/web_dev_projects/react_projects/quizbee/src/index.js"],"names":["React","Component","ReactDOM","quizService","QuestionBox","QuizBee","state","questionBank","score","computeAnswer","answer","questionId","setState","map","question","userAnswer","getQuestions","then","response","x","componentDidMount","onSubmitHandle","id","val","filter","correct","length","console","log","render","answers","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\"\nimport quizService from \"./quizService\"\nimport QuestionBox from \"./components/QuestionBox\"\n\n\nclass QuizBee extends Component {\n    state = {\n        questionBank: [],\n        score: 0\n    };\n\n    computeAnswer = (answer, questionId ) => {\n        this.setState({\n            score: 0,\n            questionBank: this.state.questionBank.map( question => {\n                if( question.questionId === questionId ){\n                    return {\n                        ...question,\n                        userAnswer: answer\n                    }\n                }\n                return {...question}\n            })\n        })\n        // console.log(\"Submitted\", this.state.questionBank)\n\n    }\n\n    getQuestions = () => {\n        quizService().then( response => {\n            this.setState({\n                questionBank: response.map(x => {\n                    return {\n                        ...x,\n                        userAnswer: \"\"\n                    }\n                })\n            });\n        });\n        \n    }\n\n    componentDidMount(){\n        this.getQuestions();\n    }\n\n    onSubmitHandle(id){\n        const val = this.questionBank.filter(question => question.correct === question.userAnswer).length\n        this.setState({\n            questionBank: this.state.questionBank,\n            score: val\n        })\n        console.log(this.state.score)  \n        // console.log(\"Submitted\", this.state.questionBank)\n    }\n\n    render(){\n        return (\n            <div className='container'>\n                <div className='title'> QuizBee </div>\n                { this.state.questionBank.length > 0 && \n                this.state.questionBank.map( ({question, answers, correct, questionId, userAnswer}) => \n                    <QuestionBox \n                        question={question} \n                        options={answers} \n                        key={questionId}\n                        selected={answer => this.computeAnswer(answer, questionId)}/>\n                )};\n                <div className='submitBtn'>\n                    <button onClick={this.onSubmitHandle}> Submit Quiz </button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(<QuizBee/>, document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}